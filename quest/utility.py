from random import randint


def stats_keeping() -> list:
    return [80, 30, 0, 0]


def keep_stats_changing(time, choice) -> list:
    # unmounted
    if choice == "1" and time == "day":
        return [-60, +40, +10, +10]
    elif choice == "2" and time == "day":
        return [-30, +25, +5, +5]
    elif choice == "3" and time == "day":
        return [-10, +15, 0, 0]
    elif choice == "4" and time == "day":
        return [0, 0, -30, 0]
    elif choice == "1" and time == "evening":
        return [+30, +25, 0, +5]
    elif choice == "2" and time == "evening":
        return [+60, -30, 0, -3]
    elif choice == "3" and time == "evening":
        return [-20, -40, 0, -3]


def rules() -> None:
    print("В ходе игры проходит 10 дней. Каждый день вам представляется 2 выбора: "
          "что делать во время пар и что делать вечером."
          "\nПо итогу 10 дней (если вы, конечно же, доживёте и не будете отчисленны) вам будут представлены "
          "результаты игры, а именно то, как вы сдадите сессию. "
          "\nНа это влияет два фактора: 1)ВЕРОЯТНОСТЬ АВТОМАТА и 2)УРОВЕНЬ ЗНАНИЙ."
          "\n\nПеред каждым действием вам выводится ваше текущее состояние "
          "по характеристикам:"
          "\n\nСЫТОСТЬ"
          "\nУСТАЛОСТЬ"
          "\nВЕРОЯТНОСТЬ АВТОМАТА"
          "\nУРОВЕНЬ ЗНАНИЙ"
          "\n\n(значения всех характеристик, кроме УРОВНЯ ЗНАНИЙ, не могут опускаться ниже 0, а СЫТОСТЬ, УСТАЛОСТЬ "
          "и ВЕРОЯТНОСТЬ АВТОМАТА имеют верхний порог 100)"
          "\n\nЗатем вам будет предложено сделать выбор из нескольких действий при помощи цифр 1, 2, 3, 4. "
          "Как он повлияет на ваше состояние? Вам подскажут!")


def day_game_test(counter_, stats_) -> None:
    print(
        "\nВы не помните число (впрочем как и всегда), но что-то внутри подсказывает вам, что сессия близко. До нее "
        "всего ничего дней...",
        str(counter_) + ",", "если точнее. "
                             "\nПора решить, как вы проведете ещё один университетский день."
                             "\n\n(1) Усердно учиться [СЫТОСТЬ (-30), УСТАЛОСТЬ(+20), ШАНСЫ НА АВТОМАТ (+20), "
                             "ЗНАНИЯ (+15)] "
                             "\n(2) Учиться [СЫТОСТЬ (-15), УСТАЛОСТЬ(+20), ШАНСЫ НА АВТОМАТ (+10), ЗНАНИЯ (+7)]"
                             "\n(3) Сидеть на паре и бездельничать [СЫТОСТЬ (-10), УСТАЛОСТЬ(+10), ШАНСЫ НА АВТОМАТ ("
                             "0), ЗНАНИЯ (0)] "
                             "\n(4) Вернуться домой спать [СЫТОСТЬ (0), УСТАЛОСТЬ(-70), ШАНСЫ НА АВТОМАТ (-30), "
                             "ЗНАНИЯ (0)] "
                             "\n\nСЫТОСТЬ:", stats_[0], "\nУСТАЛОСТЬ:", stats_[1],
        "\nШАНСЫ НА АВТОМАТ", stats_[2], "\nЗНАНИЯ", stats_[3])


def evening_game_test(stats_) -> None:
    print("\nВы возвращаетесь домой. Теперь предстоит решить, что делать этим вечером."
          "\n\n(1) Перекусить и готовиться к парам [СЫТОСТЬ (+30), УСТАЛОСТЬ(+20), ШАНСЫ НА АВТОМАТ (0), ЗНАНИЯ (+5)]"
          "\n(2) Поужинать и отдохнуть [СЫТОСТЬ (+70), УСТАЛОСТЬ(-40), ШАНСЫ НА АВТОМАТ (0), ЗНАНИЯ (-4)]"
          "\n(3) Бездельничать [СЫТОСТЬ (-20), УСТАЛОСТЬ(-50), ШАНСЫ НА АВТОМАТ (0), ЗНАНИЯ (-5)]"
          "\n\nСЫТОСТЬ:", stats_[0], "\nУСТАЛОСТЬ:", stats_[1],
          "\nШАНСЫ НА АВТОМАТ", stats_[2], "\nЗНАНИЯ", stats_[3])


def death_text(type_of_death) -> None:
    if type_of_death == "starved":
        print("Вы умираете от голода. В следующей жизни оставьте себе время на перекус!")
    elif type_of_death == "tired":
        print("Вы умираете от переутомления. В следующей жизни отдыхайте побольше!")


def autopass(bottom) -> int:
    return randint(bottom, 100)


def results_of_the_game(final_stats):
    if autopass(final_stats[2]) > 80:
        return "\nВы отлично справились! Вы сдали сессию автоматом!"
    else:
        if final_stats[3] >= 85:
            return "\nВы отлично справились! Вы сдали сессию на 5!"
        elif 70 <= final_stats[3] < 85:
            return "\nВы справились! Вы сдали сессию на 4!"
        elif 60 <= final_stats[3] < 70:
            return "\nМогло быть и хуже... Вы сдали сессию на 3!"
        else:
            return "\nВы не сдали сессию и были отчислены..."


def endgame_text(stats, death_status) -> None:
    if death_status == "yes":
        print("GAME OVER! Может быть, в следующий раз вы справитесь лучше!")
    else:
        print("\nСегодня день сессии. Время проходит незаметно, и вот вы получаете результаты:\n",
              results_of_the_game(stats))
